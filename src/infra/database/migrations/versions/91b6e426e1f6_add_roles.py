"""add roles

Revision ID: 91b6e426e1f6
Revises: 80bd26cff6be
Create Date: 2024-07-20 16:04:35.230869

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '91b6e426e1f6'
down_revision = '80bd26cff6be'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('SUPER_ADMIN', 'ADMIN', 'SUPPORT', 'USER', name='userroleenum').create(op.get_bind())
    op.add_column('users', sa.Column('user_role', postgresql.ENUM('SUPER_ADMIN', 'ADMIN', 'SUPPORT', 'USER', name='userroleenum', create_type=False), server_default='USER', nullable=False))
    op.create_unique_constraint(op.f('uq__users__email'), 'users', ['email'])
    op.create_unique_constraint(op.f('uq__users__username'), 'users', ['username'])
    op.drop_column('users', 'is_support')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('is_support', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))
    op.drop_constraint(op.f('uq__users__username'), 'users', type_='unique')
    op.drop_constraint(op.f('uq__users__email'), 'users', type_='unique')
    op.drop_column('users', 'user_role')
    sa.Enum('SUPER_ADMIN', 'ADMIN', 'SUPPORT', 'USER', name='userroleenum').drop(op.get_bind())
    # ### end Alembic commands ###
